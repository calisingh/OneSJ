{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justi\\\\Documents\\\\OneSJ\\\\one-sj\\\\src\\\\components\\\\utilities\\\\paginationHandler.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport Pagination from \"react-bootstrap/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function paginate(items, currentPage, pageSize) {\n  const startIndex = (currentPage - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n\nconst PaginationHandler = ({\n  itemCount,\n  pageSize,\n  currentPage,\n  onPageChange\n}) => {\n  const pageCount = Math.ceil(itemCount / pageSize);\n  if (pageCount === 1) return null;\n\n  const pages = _.range(1, pageCount + 1);\n\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => onPageChange(currentPage - 1 < 1 ? currentPage : currentPage - 1),\n      children: \"Prev\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), pages.map(page => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n      active: page === currentPage ? true : false,\n      onClick: () => onPageChange(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => onPageChange(currentPage + 1 > pageCount ? currentPage : currentPage + 1),\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PaginationHandler;\nexport default PaginationHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationHandler\");","map":{"version":3,"sources":["C:/Users/justi/Documents/OneSJ/one-sj/src/components/utilities/paginationHandler.jsx"],"names":["React","_","Pagination","paginate","items","currentPage","pageSize","startIndex","slice","take","value","PaginationHandler","itemCount","onPageChange","pageCount","Math","ceil","pages","range","textAlign","map","page"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,4BAAvB;;AAEA,OAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgD;AACrD,QAAMC,UAAU,GAAG,CAACF,WAAW,GAAG,CAAf,IAAoBC,QAAvC;AACA,SAAOL,CAAC,CAACG,KAAD,CAAD,CAASI,KAAT,CAAeD,UAAf,EAA2BE,IAA3B,CAAgCH,QAAhC,EAA0CI,KAA1C,EAAP;AACD;;AAED,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,SADyB;AAEzBN,EAAAA,QAFyB;AAGzBD,EAAAA,WAHyB;AAIzBQ,EAAAA;AAJyB,CAAD,KAKpB;AACJ,QAAMC,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUJ,SAAS,GAAGN,QAAtB,CAAlB;AAEA,MAAIQ,SAAS,KAAK,CAAlB,EAAqB,OAAO,IAAP;;AACrB,QAAMG,KAAK,GAAGhB,CAAC,CAACiB,KAAF,CAAQ,CAAR,EAAWJ,SAAS,GAAG,CAAvB,CAAd;;AAEA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAEK,MAAAA,SAAS,EAAE;AAAb,KAAnB;AAAA,4BACE,QAAC,UAAD,CAAY,IAAZ;AACE,MAAA,OAAO,EAAE,MACPN,YAAY,CAACR,WAAW,GAAG,CAAd,GAAkB,CAAlB,GAAsBA,WAAtB,GAAoCA,WAAW,GAAG,CAAnD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGY,KAAK,CAACG,GAAN,CAAWC,IAAD,iBACT,QAAC,UAAD,CAAY,IAAZ;AAEE,MAAA,MAAM,EAAEA,IAAI,KAAKhB,WAAT,GAAuB,IAAvB,GAA8B,KAFxC;AAGE,MAAA,OAAO,EAAE,MAAMQ,YAAY,CAACQ,IAAD,CAH7B;AAAA,gBAKGA;AALH,OACOA,IADP;AAAA;AAAA;AAAA;AAAA,YADD,CARH,eAiBE,QAAC,UAAD,CAAY,IAAZ;AACE,MAAA,OAAO,EAAE,MACPR,YAAY,CACVR,WAAW,GAAG,CAAd,GAAkBS,SAAlB,GAA8BT,WAA9B,GAA4CA,WAAW,GAAG,CADhD,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxCD;;KAAMM,iB;AA0CN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport Pagination from \"react-bootstrap/Pagination\";\r\n\r\nexport function paginate(items, currentPage, pageSize) {\r\n  const startIndex = (currentPage - 1) * pageSize;\r\n  return _(items).slice(startIndex).take(pageSize).value();\r\n}\r\n\r\nconst PaginationHandler = ({\r\n  itemCount,\r\n  pageSize,\r\n  currentPage,\r\n  onPageChange,\r\n}) => {\r\n  const pageCount = Math.ceil(itemCount / pageSize);\r\n\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n\r\n  return (\r\n    <Pagination style={{ textAlign: \"center\" }}>\r\n      <Pagination.Prev\r\n        onClick={() =>\r\n          onPageChange(currentPage - 1 < 1 ? currentPage : currentPage - 1)\r\n        }\r\n      >\r\n        Prev\r\n      </Pagination.Prev>\r\n      {pages.map((page) => (\r\n        <Pagination.Item\r\n          key={page}\r\n          active={page === currentPage ? true : false}\r\n          onClick={() => onPageChange(page)}\r\n        >\r\n          {page}\r\n        </Pagination.Item>\r\n      ))}\r\n      <Pagination.Next\r\n        onClick={() =>\r\n          onPageChange(\r\n            currentPage + 1 > pageCount ? currentPage : currentPage + 1\r\n          )\r\n        }\r\n      >\r\n        Next\r\n      </Pagination.Next>\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default PaginationHandler;\r\n"]},"metadata":{},"sourceType":"module"}